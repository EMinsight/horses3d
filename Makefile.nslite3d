#------------------------------------------------
# This makefile needs some inputs:
#	-> FC: Fortran compiler
#	-> FTObject_PATH: Path in which this makefile is contained
# 	-> FFLAGS: Fortran compiler flags
#	-> INCLUDE: Included directories for the ftn compiler
#
#------------------------------------------------

# ---------------- User definitions ------------------------
FC ?= gfortran
FTObject_PATH ?= ./ftobjectlibrary
NSLITE3D_PATH ?= .

#PETSc options:
#  If you are installing with petsc, make WITH_PETSC=y and set PETSC_LIB and PETSC_INC
WITH_PETSC =n
PETSC_LIB := -L/home/andresrueda/Programs/petsc/linux-gnu-mpich/lib/ -lpetsc #libpetsc.so
PETSC_INC := -I/home/andresrueda/Programs/petsc/include -I/home/andresrueda/Programs/petsc/linux-gnu-mpich/include

#MKL options:
#  If you are installing with MKL, make WITH_MKL=y... and, if using gortran, set LIB_BLAS and LIB_LAPACK 
WITH_MKL =n
LIB_LAPACK = /opt/intel/mkl/lib/intel64/libmkl_lapack95_lp64.a
LIB_BLAS = /opt/intel/mkl/lib/intel64/libmkl_blas95_lp64.a  -L/opt/intel/mkl/lib/intel64 -Wl,--no-as-needed -lmkl_gf_lp64 -lmkl_intel_thread -lmkl_core  -lpthread -lm -ldl -L/opt/intel/lib/intel64_lin/ -liomp5

#-----------------------------------------------------------
FFLAGS ?= -cpp -D_has_Quad
INCLUDE ?= -I$(FTObject_PATH)/include
LIBS = 
MACROS = 

ifeq ($(FC),gfortran)
  MOD_FLAG ?= -J
else
  MOD_FLAG ?= -module 
endif

# -------------- HERE WE LINK THE LIBRARIES ------
#PETSc
ifeq '$(WITH_PETSC)''y'
  MACROS+= -DHAS_PETSC
  LIBS += $(PETSC_LIB)
  INCLUDE+= $(PETSC_INC)
endif

#MKL
ifeq '$(WITH_MKL)''y'
	ifeq '$(FC)''gfortran'
		MACROS+= -DHAS_MKL
  	LIBS += $(LIB_BLAS) $(LIB_LAPACK)
  else #ifort
  	MACROS+= -DHAS_MKL
  	FCFLAGS+= -mkl
  endif
endif


# ------------------------------------------------
include $(FTObject_PATH)/Makefile.ftobjectlibrary



OBJS_NSLITE3D= SMConstants FTTimerClass FileReading Utilities TimerClass Plotter\
		LegendreAlgorithms InterpolationAndDerivatives\
		Physics BoundaryConditions SharedBCModule\
		FacePatchClass MappedGeometry TransfiniteMaps3D\
		FaceClass HexElementClass HexElementConnectivityDefinitions HexMesh MeshTypes NodeClass\
		DGSEMClass DGSpaceAndTimeDerivativeMethods NodalStorageClass\
		PlotterDataSource Headers\
		ReadInputFile Setup TimeIntegrator ProblemFile\
		NSLite3DMain Implicit_JF JFNKClass GMRESClass ConnectivityClass Implicit_NJ Jacobian ColorsClass PetscSolverClass CSR_Matrices GenericLinSolverClass MKLPardisoSolverClass LinearSolverClass IterativeSolverClass

# --------------- Dependencies 
NSLite3DMain: TimeIntegrator \
ProblemFile \
HexMesh \
Plotter \
FTTimerClass \
SharedBCModule \
BoundaryConditions \
ReadInputFile \
SMConstants \
DGSEMClass

FileReading: SMConstants
Utilities: SMConstants 
Plotter: NodalStorageClass HexElementClass PlotterDataSource 
TimerClass: SMConstants
LegendreAlgorithms: SMConstants 
Headers: SMConstants
InterpolationAndDerivatives: SMConstants LegendreAlgorithms 
BoundaryConditions: SMConstants Physics MeshTypes HexElementClass SharedBCModule 
Physics: SMConstants FTValueDictionaryClass Headers
SharedBCModule: FTValueDictionaryClass 
FacePatchClass: SMConstants 
MappedGeometry: SMConstants TransfiniteMaps3D NodalStorageClass 
TransfiniteMaps3D: SMConstants FacePatchClass 
FaceClass: SMConstants MeshTypes InterpolationAndDerivatives LegendreAlgorithms
HexElementClass: SMConstants MeshTypes TransfiniteMaps3D HexElementConnectivityDefinitions NodalStorageClass LegendreAlgorithms InterpolationAndDerivatives MappedGeometry ConnectivityClass
HexElementConnectivityDefinitions: SMConstants 
HexMesh: Physics FTValueClass FTMultiIndexTable TransfiniteMaps3D FaceClass MeshTypes SharedBCModule NodeClass HexElementClass Headers HexElementConnectivityDefinitions
NodeClass: SMConstants MeshTypes 
DGSEMClass: DGSpaceAndTimeDerivativeMethods Physics NodalStorageClass SharedBCModule BoundaryConditions HexMesh SMConstants 
DGSpaceAndTimeDerivativeMethods: HexElementClass Physics NodalStorageClass MappedGeometry InterpolationAndDerivatives SMConstants 
NodalStorageClass: SMConstants LegendreAlgorithms InterpolationAndDerivatives 
TimeIntegrator: Physics Plotter ProblemFile SMConstants DGSEMClass InterpolationAndDerivatives Implicit_JF Implicit_NJ
PlotterDataSource: SMConstants 
ReadInputFile: SMConstants FTValueDictionaryClass SharedBCModule Physics Setup
ProblemFile: SMConstants Physics BoundaryConditions MeshTypes Assert DGSEMClass 
Implicit_JF: SMConstants DGSEMClass Physics JFNKClass
JFNKClass: SMConstants GMRESClass
GMRESClass: SMConstants
Implicit_NJ: SMConstants DGSEMClass HexElementClass Physics Jacobian ColorsClass LinearSolverClass CSR_Matrices
Jacobian: SMConstants DGSEMClass Physics
ColorsClass: DGSEMClass
CSR_Matrices: SMConstants
#Linear solvers
LinearSolverClass: MKLPardisoSolverClass PetscSolverClass IterativeSolverClass

MKLPardisoSolverClass: SMConstants CSR_Matrices PetscSolverClass GenericLinSolverClass
PetscSolverClass: CSR_Matrices GenericLinSolverClass SMConstants
IterativeSolverClass: SMConstants CSR_Matrices PetscSolverClass GenericLinSolverClass

GenericLinSolverClass: SMConstants CSR_Matrices DGSEMClass

# ######################################### #
# --------- DO NOT EDIT ------------------- #
# ######################################### #
INCLUDE+= -I$(NSLITE3D_PATH)/include

OBJS_NSLITE3D_EXEC=$(foreach obj,$(OBJS_NSLITE3D),$(NSLITE3D_PATH)/build/$(obj).o)

# ---------- General compilation rule -----------------------------
FILE_NSLITE = $(or $(wildcard $(NSLITE3D_PATH)/Source/**/$@.f90),$(wildcard $(NSLITE3D_PATH)/Source/$@.f90),$(wildcard $(NSLITE3D_PATH)/Source/**/$@.F90))

$(OBJS_NSLITE3D): %: $(or $(wildcard $(NSLITE3D_PATH)/Source/**/%.f90), $(wildcard $(NSLITE3D_PATH)/Source/%.f90) , $(wildcard $(NSLITE3D_PATH)/Source/**/%.F90) )
	$(FC) $(FFLAGS) $(MACROS) $(INCLUDE) $(MOD_FLAG)$(NSLITE3D_PATH)/include -c $(FILE_NSLITE) -o $(NSLITE3D_PATH)/build/$@.o



nslite3dall: createNSFolders $(OBJS_FTObjLib) $(OBJS_NSLITE3D)

# ------------------------------------------------------
#
#	Rules to compile objects and dependencies
#
# ------------------------------------------------------
# ----------------------------------------------------------------------
#
#	Extra macros
#
# ----------------------------------------------------------------------

nslite3dclean:
	$(info Removing object *.o files from $(NSLITE3D_PATH)/build)
	$(info Removing module *.mod files from $(NSLITE3D_PATH)/include)
	@rm -f $(NSLITE3D_PATH)/build/*.o* $(NSLITE3D_PATH)/include/*.mod*

createNSFolders:
	mkdir -p $(NSLITE3D_PATH)/build
	mkdir -p $(NSLITE3D_PATH)/include
	mkdir -p $(NSLITE3D_PATH)/bin
